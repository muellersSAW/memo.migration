[transmogrifier]
pipeline =
  jsonsource
  foldering
  renameCreators
  renameCategory
  edtf_date
  setsqlid
  portal_type
  settitle
  title_to_id
  enrich_generated_id
  generate_path
  constructor
  schemaupdater
  datesupdater
  logger


[definitions]
table_prefix = memo_treatises_
path_prefix = /treatises
file = upgrade_memo.json
path = memoDBJson


[jsonsource]
blueprint = ploneconf.jsonsource
path = ${definitions:path}
file = ${definitions:file}

[settitle]
blueprint = collective.transmogrifier.sections.manipulator
keys = name
destination = string:title
condition = python:'title' not in item and 'name' in item and item['name'] != ""

[renameCreators]
blueprint = ploneconf.usermapper
path = memoDBJson/export_queries_results
file = users_manuell.json

[renameCreators_old]
blueprint = collective.transmogrifier.sections.manipulator
keys = creator
destination = string:creators
condition = python:'creators' not in item and 'creator' in item and item['creator'] != "" and item['creator'] != None

[renameCategory]
blueprint = collective.transmogrifier.sections.manipulator
keys = category
destination = string:subjects
condition = python:'subjects' not in item and 'category' in item and item['category'] != "" and item['category'] != None

[setsqlid]
blueprint = collective.transmogrifier.sections.inserter
key = string:sqlid
idfield = example_id
value = python: str(item['${setsqlid:idfield}'])
condition = python:'${setsqlid:idfield}' in item


[foldering]
blueprint = collective.transmogrifier.sections.inserter
key = string:_folder
value = string:/importfolder
condition = python:'_folder' not in item

[title_to_id]
blueprint = plone.app.transmogrifier.urlnormalizer
source-key = title
destination-key = string:_generated_id
#locale = string:en
#condition = python:'_path' not in item

[enrich_generated_id]
blueprint = collective.transmogrifier.sections.inserter
key = string:_generated_id
value = python: item['_generated_id']+'-'+str(item['${setsqlid:idfield}'])
condition = python:'${setsqlid:idfield}' in item


[generate_path]
blueprint = collective.transmogrifier.sections.inserter
key = string:_path
value = python:(item['_folder'] + '/' if '_folder' in item else '') + item['_generated_id']
condition = python:'_path' not in item

[portal_type]
blueprint = collective.transmogrifier.sections.inserter
key = string:_type
value = string:ct_sql

[language_mapper]
blueprint = ploneconf.mapper
tax_name = language
tax_field = taxonomy_language

[constructor]
blueprint = collective.transmogrifier.sections.constructor

[schemaupdater]
blueprint = transmogrify.dexterity.schemaupdater

[datesupdater]
blueprint = ploneconf.datesupdater
path-key = _path
modification-key = last_edited
creation-key = last_edited

[logger]
blueprint = collective.transmogrifier.sections.logger
name = Transmogrifier [importing]
level = INFO
key = _path

[breaker]
blueprint = collective.transmogrifier.sections.breakpoint
condition = python: True

[edtf_date]
blueprint = ploneconf.edtf_converter