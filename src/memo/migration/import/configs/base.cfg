[transmogrifier]
pipeline =
  jsonsource
  foldering
  setsqlid
  settitle
  portal_type
  title_to_id
  generate_path
  constructor
  schemaupdater
  logger


[definitions]
table_prefix = memo_treatises_
path_prefix = /treatises

[jsonsource]
blueprint = ploneconf.jsonsource
path = memoDBJson
tables = ['${definitions:table_prefix}author']

[settitle]
blueprint = collective.transmogrifier.sections.manipulator
keys = name
destination = string:title
condition = python:'title' not in item and name in item and item['name'] != ""

[setsqlid]
blueprint = collective.transmogrifier.sections.inserter
key = string:sqlid
idfield = example_id
value = python: int(item['${setsqlid:idfield}'])
condition = python:'${setsqlid:idfield}' in item


[foldering]
blueprint = collective.transmogrifier.sections.inserter
key = string:_folder
value = string:/importfolder
condition = python:'_folder' not in item

[title_to_id]
blueprint = plone.app.transmogrifier.urlnormalizer
source-key = title
destination-key = string:_generated_id
#locale = string:en
#condition = python:'_path' not in item

[generate_path]
blueprint = collective.transmogrifier.sections.inserter
key = string:_path
value = python:(item['_folder'] + '/' if '_folder' in item else '') + item['_generated_id']
condition = python:'_path' not in item

[portal_type]
blueprint = collective.transmogrifier.sections.inserter
key = string:_type
value = string:ct_sql

[constructor]
blueprint = collective.transmogrifier.sections.constructor

[schemaupdater]
blueprint = transmogrify.dexterity.schemaupdater


[logger]
blueprint = collective.transmogrifier.sections.logger
name = Transmogrifier [importing]
level = INFO
key = _path