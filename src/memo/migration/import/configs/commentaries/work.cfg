[transmogrifier]
include = memo_migration_base_c
pipeline -=
  title_to_id
  enrich_generated_id
  generate_path
  constructor
  schemaupdater
  datesupdater
  logger
pipeline +=
  title_to_id
  enrich_generated_id
  renameLanguage
  language_mapper
  generate_path
  alternativeTitles
  editions
  addLiterature
  addLink
  constructor
  schemaupdater
  datesupdater
  logger

[jsonsource]
path = memoDBJson/export_queries_results
file = c_works.json

[portal_type]
value = string:work

[foldering]
value = string:${definitions:path_prefix}/works

[setsqlid]
idfield =  work_id

[renameLanguage]
blueprint = collective.transmogrifier.sections.manipulator
keys = language
destination = string:language_work
condition = python:'language_work' not in item and 'language' in item and item['language'] != ""


[alternativeTitles]
blueprint = ploneconf.subtable
path = ${definitions:path}
file = ${definitions:file}
tables = ${definitions:table_prefix}work_alt_title
linkinField = work_id
targetField = alternative_titles
valueField = alt_title

[editions]
blueprint = ploneconf.subtable
path = ${definitions:path}
file = ${definitions:file}
tables = ${definitions:table_prefix}work_editions
linkinField = work_id
targetField = editions
valueField = text


[addLiterature]
blueprint = ploneconf.subtable
path = ${definitions:path}
file = ${definitions:file}
tables = ${definitions:table_prefix}work_literature
linkinField = work_id
targetField = literature
valueField = text

[addLink]
blueprint = ploneconf.addlinks
path = ${definitions:path}
file = ${definitions:file}
tables = ${definitions:table_prefix}work_link
linkinField = work_id
targetField = links


